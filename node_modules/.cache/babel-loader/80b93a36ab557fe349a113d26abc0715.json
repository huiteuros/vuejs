{"remainingRequest":"C:\\Users\\perso\\Documents\\GitHub\\vuejs\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\perso\\Documents\\GitHub\\vuejs\\node_modules\\eslint-loader\\index.js??ref--12-0!C:\\Users\\perso\\Documents\\GitHub\\vuejs\\src\\store\\module\\plats.js","dependencies":[{"path":"C:\\Users\\perso\\Documents\\GitHub\\vuejs\\src\\store\\module\\plats.js","mtime":1647435539350},{"path":"C:\\Users\\perso\\Documents\\GitHub\\vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647430852259},{"path":"C:\\Users\\perso\\Documents\\GitHub\\vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":1647430855984},{"path":"C:\\Users\\perso\\Documents\\GitHub\\vuejs\\node_modules\\eslint-loader\\index.js","mtime":1647430854378}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IG1vbkRBTyBmcm9tICJAL0FQSS9tb25EQU8iOwpjb25zdCBzdGF0ZSA9IHsKICBwbGF0czogW10KfTsKY29uc3QgZ2V0dGVycyA9IHsKICBhbGxQbGF0czogc3RhdGUgPT4gewogICAgcmV0dXJuIHN0YXRlLnBsYXRzOwogIH0KfTsKY29uc3QgbXV0YXRpb25zID0gewogIHNldFBsYXQoc3RhdGUsIHBsYXQpIHsKICAgIHN0YXRlLnBsYXRzID0gcGxhdDsKICB9LAoKICByZW1vdmVQbGF0KHN0YXRlLCBpZCkgewogICAgc3RhdGUucGxhdHMgPSBzdGF0ZS5wbGF0cy5maWx0ZXIocGxhdCA9PiBwbGF0Ll9pZCAhPT0gaWQpOwogIH0sCgogIGFkZFBsYXQoc3RhdGUsIG5ld1BsYXQpIHsKICAgIHN0YXRlLnBsYXRzLnVuc2hpZnQobmV3UGxhdCk7CiAgfSwKCiAgdXBkYXRlUGxhdChzdGF0ZSwgdXBkYXRlUGxhdCkgewogICAgY29uc3QgaW5kZXggPSBzdGF0ZS5wbGF0cy5maW5kSW5kZXgocGxhdCA9PiBwbGF0Ll9pZCA9PT0gdXBkYXRlUGxhdC5faWQpOwoKICAgIGlmIChpbmRleCAhPT0gLTEpIHsKICAgICAgc3RhdGUucGxhdHMuc3BsaWNlKGluZGV4LCAxLCB1cGRhdGVQbGF0KTsKICAgIH0KICB9Cgp9Owpjb25zdCBhY3Rpb25zID0gewogIGluaXRQbGF0cyh7CiAgICBjb21taXQKICB9KSB7CiAgICBtb25EQU8uZmluZEFsbCgpLnRoZW4oYXN5bmMgcmVzcG9uc2UgPT4gewogICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuZGF0YTsKCiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkgewogICAgICAgIGNvbW1pdCgic2V0UGxhdCIsIHJlc3BvbnNlLmRhdGEpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChkYXRhKTsKICAgICAgfQogICAgfSkuY2F0Y2goKCkgPT4gewogICAgICBjb25zb2xlLmxvZygic2VydmVyIHByb2JhYmx5IG5vdCB1cCIpOwogICAgfSk7CiAgfSwKCiAgZGVsZXRlUGxhdCh7CiAgICBjb21taXQKICB9LCBpZCkgewogICAgbW9uREFPLnJlbW92ZShpZCkudGhlbihhc3luYyByZXNwb25zZSA9PiB7CiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5kYXRhOwoKICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAwKSB7CiAgICAgICAgY29tbWl0KCJyZW1vdmVQbGF0IiwgaWQpOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChkYXRhKTsKICAgICAgfQogICAgfSk7CiAgfSwKCiAgdXBkYXRlUGxhdCh7CiAgICBjb21taXQKICB9LCB1cGRhdGVQbGF0KSB7CiAgICBtb25EQU8udXBkYXRlKHVwZGF0ZVBsYXQuX2lkLCB1cGRhdGVQbGF0KS50aGVuKGFzeW5jIHJlc3BvbnNlID0+IHsKICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmRhdGE7CgogICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHsKICAgICAgICBjb21taXQoInVwZGF0ZVBsYXQiLCByZXNwb25zZS5kYXRhKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZGF0YSk7CiAgICAgIH0KICAgIH0pOwogIH0sCgogIGFkZFBsYXQoewogICAgY29tbWl0CiAgfSwgcGxhdCkgewogICAgbW9uREFPLmNyZWF0ZShwbGF0KS50aGVuKGFzeW5jIHJlc3BvbnNlID0+IHsKICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CgogICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDEpIHsKICAgICAgICBjb25zb2xlLmxvZygiU3VibWl0IFN1Y2Nlc3MiKTsKICAgICAgICBjb21taXQoImFkZFBsYXQiLCByZXNwb25zZS5kYXRhKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZGF0YSk7CiAgICAgIH0KICAgIH0pLmNhdGNoKGUgPT4gewogICAgICBjb25zb2xlLmxvZyhlKTsKICAgIH0pOwogIH0KCn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZSwKICBnZXR0ZXJzLAogIG11dGF0aW9ucywKICBhY3Rpb25zCn07"},{"version":3,"sources":["C:/Users/perso/Documents/GitHub/vuejs/src/store/module/plats.js"],"names":["monDAO","state","plats","getters","allPlats","mutations","setPlat","plat","removePlat","id","filter","_id","addPlat","newPlat","unshift","updatePlat","index","findIndex","splice","actions","initPlats","commit","findAll","then","response","data","status","Promise","reject","catch","console","log","deletePlat","remove","update","create","e"],"mappings":"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","sourcesContent":["import monDAO from \"@/API/monDAO\";\r\n\r\nconst state = {\r\n    plats: []\r\n};\r\nconst getters = {\r\n    allPlats: (state) => {\r\n        return state.plats;\r\n    }\r\n};\r\nconst mutations = {\r\n    setPlat(state, plat) {\r\n        state.plats = plat;\r\n    },\r\n    removePlat(state, id) {\r\n        state.plats = state.plats.filter((plat) => plat._id !== id);\r\n    },\r\n    addPlat(state, newPlat) {\r\n        state.plats.unshift(newPlat);\r\n    },\r\n    updatePlat(state, updatePlat) {\r\n        const index = state.plats.findIndex(\r\n            (plat) => plat._id === updatePlat._id\r\n        );\r\n        if (index !== -1) {\r\n            state.plats.splice(index, 1, updatePlat);\r\n        }\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    initPlats({ commit }) {\r\n        monDAO.findAll()\r\n            .then(async (response) => {\r\n                const data = await response.data;\r\n                if (response.status === 200) {\r\n                    commit(\"setPlat\", response.data);\r\n                } else {\r\n                    return Promise.reject(data);\r\n                }\r\n            })\r\n            .catch(() => {\r\n                console.log(\"server probably not up\");\r\n            });\r\n    },\r\n    deletePlat({ commit }, id) {\r\n        monDAO.remove(id).then(async (response) => {\r\n            const data = await response.data;\r\n            if (response.status === 200) {\r\n                commit(\"removePlat\", id);\r\n            } else {\r\n                return Promise.reject(data);\r\n            }\r\n        });\r\n    },\r\n    updatePlat({ commit }, updatePlat) {\r\n        monDAO.update(updatePlat._id, updatePlat).then(async (response) => {\r\n            const data = await response.data;\r\n            if (response.status === 200) {\r\n                commit(\"updatePlat\", response.data);\r\n            } else {\r\n                return Promise.reject(data);\r\n            }\r\n        });\r\n    },\r\n    addPlat({ commit }, plat) {\r\n        monDAO.create(plat)\r\n            .then(async (response) => {\r\n                const data = response.data;\r\n                if (response.status === 201) {\r\n                    console.log(\"Submit Success\");\r\n                    commit(\"addPlat\", response.data);\r\n                } else {\r\n                    return Promise.reject(data);\r\n                }\r\n            })\r\n            .catch((e) => {\r\n                console.log(e);\r\n            });\r\n    }\r\n};\r\n\r\nexport default {\r\n    state,\r\n    getters,\r\n    mutations,\r\n    actions\r\n};\r\n"]}]}